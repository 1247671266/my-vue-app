{
  "compilerOptions": {
    "target": "ESNext", // 将代码编译为最新版本的 JS
    "useDefineForClassFields": true, // 使用 Object.defineProperty 定义 class 中的属性，而非使用 obj.key = value 的形式定义属性
    "module": "ESNext", // 使用 ES Module 格式打包编译后的文件
    "moduleResolution": "Node", // 使用 Node 的模块解析策略
    "strict": true, // 启用所用严格的类型检查
    "jsx": "preserve", // 保留原始的 JSX 代码，不进行编译
    "sourceMap": true, // 生成 sourceMap 文件
    "resolveJsonModule": true,  // 允许引入 JSON 文件
    "isolatedModules": false,  // 该属性要求所有文件都是 ES Module 模块
    "esModuleInterop": true, // 允许使用 import 引入使用 export = 导出的内容
    "lib": ["ESNext", "DOM"], // 引入 ES 最新特性和 DOM 接口的类型定义
    "skipLibCheck": true, // 跳过对 .d.ts 文件的类型检查
    "baseUrl":"./", //用于设置非相对模块名称的基础目录
    "paths":{ //用于设置模块名到基于baseUrl的路径映射
      "@":["src"],
      "@/*":["src/*"]
    },
    "types": ["vite/client"]  //提供import.meta.env上Vite注入的环境变量的类型定义
  },
  "include": [
    "src/**/*.ts", 
    "src/**/*.d.ts", 
    "src/**/*.tsx", 
    "src/**/*.vue",
    "components.d.ts",
    "auto-imports.d.ts" //自动导入模块
  ],
  "references": [{ "path": "./tsconfig.node.json" }],//项目引用（Project References）” 功能,可以为项目不同部分使用不同的typeSrcipt配置文件
}
